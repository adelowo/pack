// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/buildpack/pack (interfaces: FS)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFS is a mock of FS interface
type MockFS struct {
	ctrl     *gomock.Controller
	recorder *MockFSMockRecorder
}

// MockFSMockRecorder is the mock recorder for MockFS
type MockFSMockRecorder struct {
	mock *MockFS
}

// NewMockFS creates a new mock instance
func NewMockFS(ctrl *gomock.Controller) *MockFS {
	mock := &MockFS{ctrl: ctrl}
	mock.recorder = &MockFSMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFS) EXPECT() *MockFSMockRecorder {
	return m.recorder
}

// CreateTarFile mocks base method
func (m *MockFS) CreateTarFile(arg0, arg1, arg2 string) error {
	ret := m.ctrl.Call(m, "CreateTarFile", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateTarFile indicates an expected call of CreateTarFile
func (mr *MockFSMockRecorder) CreateTarFile(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTarFile", reflect.TypeOf((*MockFS)(nil).CreateTarFile), arg0, arg1, arg2)
}
